CST2019 1-5 Zuma
描述
　　祖玛是一款曾经风靡全球的游戏，其玩法是：在一条轨道上初始排列着 n 个彩色珠子，其中任意三个相邻的珠子不会完全同色。此后，你可以发射珠子到轨道上并加入原有序列中。一旦有三个或更多同色的珠子变成相邻，它们就会立即消失。这类消除现象可能会连锁式发生，其间你将暂时不能发射珠子。
　　开发商最近准备为玩家写一个游戏过程的回放工具。他们已经在游戏内完成了过程记录的功能，而结算功能的实现则委托你来完成。
　　游戏过程的记录中，首先是轨道上初始的珠子序列，然后是玩家接下来所做的一系列操作。你的任务是，计算经过一系列操作之后的珠子序列。
输入
　　第 1 行是一个由大写字母 'A' ~ 'Z' 组成的字符串，表示轨道上初始的珠子序列，不同的字母表示不同的颜色。
　　第 2 行是一个数字 m，表示整个回放过程共有 m 次操作。
　　接下来的 m 行依次对应于各次操作。每次操作由一个数字 k 和一个大写字母 Σ 描述，以空格分隔。其中，Σ 为新珠子的颜色。若插入前共有 b 颗珠子，则 k ∈ [0, b] 表示新珠子嵌入之后（尚未发生消除之前）在轨道上的位序。
输出
　　输出共 1 行，给出所有操作（及可能随即发生的消除现象）之后轨道上的珠子序列。
　　如果最终轨道上没有珠子，则仅输出一个空行（即仅输出一个换行符）。
输入样例
  ACCBA
  5
  1 B
  0 A
  2 B
  4 C
  0 A
　　*此样例是第 1 个测试点
输出样例
  A
样例解释
　　各次操作后，轨道上的珠子序列分别是
  ABCCBA
  AABCCBA
  AABBCCBA

  A

数据范围
　　0 ≤ n ≤ 500,000
　　0 ≤ m ≤ 500,000
　　输入保证珠子的插入位置合法
  
资源限制
　　时间限制：1.5 sec
　　空间限制：256 MB

提示
　　本题字母、数字混合输入，且初始序列可能为空，请使用足够鲁棒的读入方式。
　　[ 分块数组]
　　[ 列表可以 O(1) 完成寻址，但是需要 O(N) 完成删除和插入，链表可以 O(1) 完成删除和插入，但是需要 O(N) 完成寻址。我们将他们结合起来选择 √n为一个中间值。 ]
　　[ 将N长度的列表以 O(√n) 长度断成 O(√n) 块，每块用链表连起来，这样链表的长度为 O(√n) 同时列表的长度为 O(√n)，我们可以在 O(√n) 的时间范围内完成寻址插入和删除。 ]
　　[ 另一个需要注意的是在移动数组元素时，使用 memove 能够大大提升程序的性能 ]
