CST2019 1-2 Graphics
描述

　　小 Q 对计算几何有着浓厚的兴趣。他经常对着平面直角坐标系发呆，思考一些有趣的问题。今天，他想到了一个十分有意思的题目：

　　首先，小 Q 会在 x 轴正半轴和 y 轴正半轴分别挑选 n 个不同点。随后，他将 x 轴的点与 y 轴的点一一连接，形成 n 条线段，并保证任意两条线段不相交。小 Q 确定这种连接方式有且仅有一种。最后，小 Q 会给出 m 个询问。对于每个询问，将会给定一个点 P(Px, Py)，请回答线段 OP 与 n 条线段会产生多少个交点？

　　小 Q 找到了正在钻研数据结构的你，希望你可以帮他解决这道难题。
输入

　　第 1 行包含一个正整数 n，表示线段的数量；

　　第 2 行包含 n 个正整数，表示小 Q 在 x 轴选取的点的横坐标；

　　第 3 行包含 n 个正整数，表示小 Q 在 y 轴选取的点的纵坐标；

　　第 4 行包含一个正整数 m，表示询问数量；

　　随后 m 行，每行包含两个正整数 Px, Py，表示询问中给定的点的横、纵坐标。
输出

　　共 m 行，每行包含一个非负整数，表示你对这条询问给出的答案。
输入样例

3
4 5 3
3 5 4
2
1 1
3 3

输出样例

0
3

样例说明

　　3 条线段分别为：(3, 0) - (0, 3)、(4, 0) - (0, 4)、(5, 0) - (0, 5)

　　(0, 0) - (1, 1)不与他们有交点，答案为 0。

　　(0, 0) - (3, 3)与三条线段均有交点，答案为 3。
数据范围

　　1 ≤ n ≤ 200,000

　　1 ≤ m ≤ 200,000

　　1 ≤ 横纵坐标 < 2^31
资源限制

　　时间限制：0.5 sec

　　内存限制：256 MB
提示

    [ 二分查找、ToLeft测试。]
    [ 对于每条线段，可以用向量叉积的 ToLeft 测试来判断其在线段的左边还是右边。通过二分查找，可以高效的查找点在哪个区域内，从而确定交点的数目。]

