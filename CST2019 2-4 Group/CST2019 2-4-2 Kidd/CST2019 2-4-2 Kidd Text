
题目描述
　　长大后的黑羽快斗也成为了一位魔术师。为了超越他的父亲，他开始了扑克牌练习。
　　就像小时候父亲做的那样，他首先把一叠扑克以正面朝上的姿态顺次在桌上排成一行，之后的每一次挥一挥衣袖，都会反转一连串的扑克，改变它们的正反朝向。为了检验自己的心算能力，快斗会随时问自己：目前从第i张扑克牌到第j张扑克牌（包含第i和第j张扑克牌），一共被反转过几次？

输入
　　第一行包含两个正整数n、m，其中n表示扑克牌的数量，要注意的是扑克牌的数量可能会很大。
　　接下来共m行，每行包含一个操作，操作分为2种：
------------------------------------------------------------------------------
  H i j	//快斗挥一挥手，改变了第i张牌到第j张牌的正反（包括第i和第j张扑克牌）
  Q i j	//快斗问自己：截至目前，第i张到第j张牌一共被反转过几次（包括第i和第j张扑克牌）
------------------------------------------------------------------------------
　　H操作和Q操作的范围均包含边界（即第i张和第j张牌）。
　　对于每个操作，输入保证1 ≤ i ≤ j ≤ n。

输出
　　对于每次Q操作，输出一行，包含一个整数，表示问题的答案。

输入样例
------------------------------------------------------------------------------
  7 5
  H 2 4
  Q 1 6
  H 3 6
  Q 2 5
  Q 1 7
------------------------------------------------------------------------------

输出样例
------------------------------------------------------------------------------
  3
  6
  7
------------------------------------------------------------------------------
限制
　　1 ≤ n < 2^31
　　1 ≤ m ≤ 200,000
　　时间限制：1 sec
　　内存限制：256 MB

提示
    - Segment Tree（讲义09.BSTA.XC.Segment Tree）
    - 参考讲义中"Merge At Common Ancestors"一节，Segment Tree中每个内部节点保存所有 merge 到该节点的反转次数。
    - 结果可能很大，注意用long long存储。
