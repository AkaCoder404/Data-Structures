描述
 > 有一个运行在单核CPU上的简单操作系统，它任一时刻最多只能执行一个进程，我们要为它设计一个简单的进程调度器。

进程：
    > 这个操作系统上的每个进程在创建时会被赋予一个进程号，不同进程的进程号均不相同；
    > 每个进程还存在一个优先级，优先级高的进程会抢占当前正在运行的、优先级较低的进程（抢占指使CPU暂停执行优先级低的进程，转而执行优先级高的进程）；
    > 此外，进程还有一个创建时间和执行完毕所需的执行时间；
    > 进程执行完毕后就不再占用CPU资源，也不会再被进程调度器调度了。

进程调度器的任务是，面对源源不断到来的进程流，选择一个进程占据CPU执行，具体而言：

    > 在任一时刻，进程调度器总是选取该时刻及其之前所有没有执行完毕的进程中优先级最高的进程占据CPU执行
    > 当新来一个待执行进程时，如果该进程的优先级大于正在执行的进程的优先级，则发生抢占，正在执行的进程让出CPU给高优先级进程执行
    > 如果两个进程的优先级相同，则采取先到先得的方案，创建时间小的先执行；如果创建时间相同，则进程号小的先执行

输入
  > 共计N + 1行，第一行表示有多少个进程需要被调度。
  > 接下来N行，每行代表一个需要被调度的进程，每个进程以
  > 进程号 优先级 创建时间 执行时间
  > 的方式给出。
  > 我们保证，这N个进程的创建时间非减，以模拟真实的进程流。

输出
  > 共计N行，每行输出第i个执行完毕的进程的进程号及其完成时间。

输入样例
--------------------------
10
1 1 2 2
4 1 2 2
3 1 4 1
2 1 4 1
5 1 5 1
6 2 5 1
7 1 7 10
8 2 8 2
9 3 9 3
10 4 9 5
--------------------------

输出样例
--------------------------
1 4
6 6
4 7
2 8
10 14
9 17
8 18
3 19
5 20
7 30
--------------------------
限制
  > 进程号、优先级、创建时间、执行时间、结束时间在int范围内。
  > 1 ≤ N ≤ 106
  > 时间：1 sec
  > 空间：256 MB

提示
     > 优先级队列

