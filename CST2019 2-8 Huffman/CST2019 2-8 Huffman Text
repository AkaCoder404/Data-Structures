
描述
  小H想对一篇文章进行编码。文章可以看做一个长为n的全由小写字母构成的字符串，小H想用二进制来分别编码这些小写字母，将英文文本变成一个01字符构成的文本。比如对于文章aaabbb，我用01表示字母a，用10表示字母b，就会变成010101101010。
  不同的编码方式会让编码后的结果长度不一样，比如aabbcc，如果用00表示a，01表示b，10表示c，就会变成000001011010。如果用0表示a，用10表示b，用11表示c，则会变成0010101111，长度会更短。
  然而，并不是所有编码方案都能够解码。比如aabbcc，如果使用0表示a,1表示b，10表示c的话，编码会得到00111010。可是，当我们遇到了10时，就无法知道对应的是c还是ba了。
  因此，我们定义一种合法的编码方式为：任意一个字符对应的编码，不能是另一个字符对应编码的前缀。
  现在，小H给了你这篇文章，请你输出任意一种最优编码方式，并输出使用该编码方式后文章的长度。

输入
  仅一行，内容为一个长为n的全小写字符串。

输出
  第一行一个整数，表示最优编码下的编码后长度。
  接下来有若干行，每行开头一个小写字母，接着跟一个空格，再然后跟一个长度不超过100的01字符串（最优情况下编码长度肯定不超过100），表示将该小写字母编码成什么样的01字符串。
  我们首先会检查你最优编码长度计算是否正确，接着会检查你的编码方式是否合法，以及使用你的编码方式是否能达到最优编码长度。
  对于在原字符串中未出现过的字符，你可以不输出，也可以随便输一个不超过100的01字符串。对于原字符串中出现过的字符，你必须输出他的编码方案。

输入样例 1
-----------------------------
  aabc
-----------------------------

输出样例 1
-----------------------------
  6
  a 1
  b 00
  c 01
-----------------------------
限制
  1 <= n <= 500,000
  时间：1 sec
  空间：256 MB

提示
　 Huffman编码
